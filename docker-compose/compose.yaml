version: "3.8"

name: archive-cloud

services:
  client:
    build:
      context: ../services/client
      args:
        REACT_APP_API_GATEWAY: ${API_GATEWAY}
    networks:
      - application

  auth-api:
    build: ../services/auth-api
    environment:
      MONGODB_HOST: mongodb
      FRONTEND_ORIGIN: ${API_GATEWAY}
      AUTH_PUBLIC_KEY: ${AUTH_PUBLIC_KEY}
      AUTH_PRIVATE_KEY: ${AUTH_PRIVATE_KEY}
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - application
    depends_on:
      - mongodb

  upload-api:
    build: ../services/upload-api
    environment:
      REDIS_HOST: redis
      KAFKA_HOST: kafka
      FRONTEND_ORIGIN: ${API_GATEWAY}
      STORAGE_API_ORIGIN: http://storage-api:3000
      AUTH_PUBLIC_KEY: ${AUTH_PUBLIC_KEY}
    volumes:
      - uploads:/usr/src/app/uploads
      - archives:/usr/src/app/archives
    networks:
      - application
    depends_on:
      - redis
      - kafka

  storage-api:
    build: ../services/storage-api
    environment:
      MONGODB_HOST: mongodb
      KAFKA_HOST: kafka
      FRONTEND_ORIGIN: ${API_GATEWAY}
      AUTH_PUBLIC_KEY: ${AUTH_PUBLIC_KEY}
    volumes:
      - archives:/usr/src/app/archives
    networks:
      - application
    depends_on:
      - mongodb
      - storage-api-mongodb-migration
      - kafka

  reverse-proxy:
    image: nginx:1.24.0
    ports:
      - "3000:80" # exposed port should be the port of API gateway see (see .env file)
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - application

  static-server:
    image: nginx:1.24.0
    volumes:
      - ../services/static-server/nginx.conf:/etc/nginx/nginx.conf
      - archives:/var/www/static/archives/
    networks:
      - application

  storage-api-mongodb-migration:
    build: ../services/storage-api/migrate-mongo
    environment:
      MONGODB_HOST: mongodb
    volumes:
      - archives:/app/archives
    networks:
      - application
    depends_on:
      - mongodb

  mongodb:
    image: mongo:6
    volumes:
      - mongodb-data:/data/db
    networks:
      - application

  redis:
    image: redis:7
    volumes:
      - redis-data:/data
    networks:
      - application

  zookeeper:
    image: bitnami/zookeeper:3
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    volumes:
      - zookeeper-data:/bitnami/zookeeper
    networks:
      - application

  kafka:
    image: bitnami/kafka:3
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    volumes:
      - kafka-data:/bitnami/kafka
    networks:
      - application
    depends_on:
      - zookeeper

volumes:
  archives:
  uploads:
  mongodb-data:
  redis-data:
  zookeeper-data:
  kafka-data:

networks:
  application:
